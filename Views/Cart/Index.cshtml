@{
    ViewBag.Title = "Cart";
}
<section class="px-5 pt-5 bg-light flex-grow-1">
    <h1>Shopping Cart</h1>

    <ul id="cartItems" class="list-group">
    </ul>

    <h2 class="mt-5">Totals</h2>
    <div id="totals">
    </div>

    <h2 class="mt-5">Get file for ShopSmart Desktop</h2>
    <button id="downloadBtn" class="btn btn-primary mb-5">Get file</button>
</section>

<script>
    // file download event listener
    document.getElementById("downloadBtn").addEventListener("click", () => {
        // Get the content from the HTML element
        let content = "";
        let cartItems = JSON.parse(localStorage.getItem("cartItems"));
        
        if (cartItems === null || cartItems.length == 0) {
            alert("No items in the cart. Add some items to use this utility.");
            return;
        }

        for (var item of cartItems)
        {
            content += item.Link + "\n";
        }

        // Create a Blob with the content
        const blob = new Blob([content], { type: "text/plain" });

        // Create a temporary anchor element
        const link = document.createElement("a");
        link.href = URL.createObjectURL(blob);
        link.download = "shoper_links.txt"; // Name of the downloaded file

        // Programmatically click the link to trigger the download
        link.click();

        // Cleanup the URL object
        URL.revokeObjectURL(link.href);
    });

    function displayPrices()
    {
        let totals = document.getElementById("totals");
        totals.innerHTML = "";

        let cartItems = JSON.parse(localStorage.getItem("cartItems"));
        
        if (cartItems === null || cartItems.length == 0)
        {
            totals.innerHTML = "<p>No totals.</p>";
            return;
        }

        prices = new Map();

        for (var item of cartItems)
        {
            let key = item.Store.toLowerCase();

            if (prices.has(key))
            {
                prices.set(key, prices.get(key) + Number(item.Price));
            }
            else 
            {
                prices.set(key, Number(item.Price));
            }
        }

        for (const [key, value] of prices)
        {
            const p = document.createElement("p");
            p.innerText = `${key.charAt(0).toUpperCase() + key.slice(1)}: ${value.toFixed(2)} lei`;
            totals.appendChild(p);
        }
    }

    function displayCartItems()
    {
        let list = document.getElementById("cartItems");
        list.innerHTML = "";

        let products = localStorage.getItem("cartItems");
        products = JSON.parse(products);

        if (products === null || products.length == 0)
        {
            list.innerHTML = "<p>Your Cart is empty, add some products <a href=\"/Product\">here</a>!</p>"
            displayPrices();
            return;
        }

        
        for (let product of products)
        {
            const item = document.createElement("li");
            const link = document.createElement("a");
            item.className = "list-group-item mx-2 my-2";
            item.id = `cartItem-${product.Id}`;
            link.className = "link-offset-2 link-opacity-50-hover link-underline link-underline-opacity-0 link-underline-opacity-50-hover";
            link.href = product.Link;
            link.innerText = product.ItemName;
            item.appendChild(link);
            item.innerHTML += ` - ${product.Quantity} ${product.MeasureUnit}, ${product.Price} lei (${product.Store})`;

            const button = document.createElement("button");
            button.className = "btn btn-outline-danger btn-sm mx-2";
            button.onclick = () => deleteCartItem(product.Id);
            button.innerHTML = "<i class=\"bi bi-x\"></i>";

            const div = document.createElement("div");
            div.className = "d-flex align-items-center mb-1";
            div.appendChild(item);
            div.appendChild(button);
            list.appendChild(div);
        }
        displayPrices();
    }

    function deleteCartItem(id)
    {
        let products = localStorage.getItem("cartItems");

        if (products === null)
        {
            return;
        }

        products = JSON.parse(products);

        const newProducts = products.filter(obj => obj.Id !== id);

        localStorage.setItem("cartItems", JSON.stringify(newProducts));
        displayCartItems();
        // displayPrices();
    }
    
    document.addEventListener('DOMContentLoaded', () => {
        displayCartItems();
        // displayPrices();
    });

    var itemIndex = 1;
    
    function redirectToMaps(store) {
        window.location.href = "/Maps?store=" + store;
    }
</script>