// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here

$primary-color: #208cff;
$secondary-color: #6c757d;
$warning-color: #a97f00;
$success-color: #00a82d;
$light-color: #f6f6f6;
$dark: #2d323e;

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";

// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";

// 6. Optionally include any other parts as needed
@import "../node_modules/bootstrap/scss/utilities";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/helpers";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap-icons/font/bootstrap-icons";
// @import "../node_modules/bootstrap/scss/navbar";

$utilities: map-merge(
  $utilities,
  (
    "height": map-merge(
      map-get($utilities, "height"),
      (
        values: map-merge(
          map-get(map-get($utilities, "height"), "values"),
          (
            60: 60%,
            80: 80%
          ),
        ),
      ),
    ),
  )
);

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "../node_modules/bootstrap/scss/utilities/api";

// 8. Add additional custom code here

body {
  font-family: Arial, sans-serif;
}

.hero {
  background: linear-gradient(to right, $success-color, $warning-color);
  color: $light-color;
}

.card {
  border: 1px solid $secondary-color;
  &:hover {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  }
}

footer {
  background-color: $secondary-color;
  color: $light-color;
  p {
    margin: 0;
  }
}

.error-popup {
  display: none; 
  width: 300px; 
  padding: 20px; 
  position: absolute; 
  top: 150%; 
  left: 50%; 
  transform: translate(-50%, -50%); 
  background-color: red; 
  color: white; 
  font-size: 18px; 
  text-align: center; 
  border-radius: 10px; 
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3); 
  z-index: 1000;
}


.address-input {
  text-align: center;
  background: 0;
  border: 0;
  outline: none;
  width: 100%;
  font-size: 1.5em;
  transition: padding 0.3s 0.2s ease;
  
  &:focus {
    padding-bottom: 5px;
  }

  // sibling magic ;o
  &:focus + .address-line {
    &:after {
      transform: scaleX(1);
    }
  }
}

.address-field {
  position: relative;
  
  .address-line {
    width: 100%;
    height: 3px;
    position: absolute;
    bottom: -8px;
    background: $dark;
    // background: $secondary;
    
    &:after {
      content: " ";
      position: absolute;
      left: 0;
      width: 100%;
      height: 3px;
      
      transform: scalex(0);
      transition: transform 0.3s ease;
      
      background: $primary;
    }
  }
}

/* Remove the arrows in number input fields */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}